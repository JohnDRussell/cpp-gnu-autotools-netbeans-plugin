/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.netbeans.modules.cppgnuautotools;

/**
 *
 * @author derby
 */
public class SelectorDialog extends javax.swing.JDialog {
    private static Object[] m_ObjectArgs;
    private static FunctionExecutor m_feCommand;

    /**
     * Creates new form SelectorDialog
     */
    public SelectorDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        if (m_ObjectArgs != null) modifyComponents(m_ObjectArgs);
    }

    private void modifyComponents(Object[] args) {
        if (args.length >= 1) {
            org.openide.awt.Mnemonics.setLocalizedText(jLabel2, (String)args[0]);
        }
        
        /** args[1] is reserved for future use. */
        
        if (args.length >= 3) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, (String)args[2]);
        } else {
            jCheckBox1.setEnabled(false);
            jCheckBox1.setVisible(false);
        }
        if (args.length >= 4) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox2, (String)args[3]);
        } else {
            jCheckBox2.setEnabled(false);
            jCheckBox2.setVisible(false);
        }
        if (args.length >= 5) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox3, (String)args[4]);
        } else {
            jCheckBox3.setEnabled(false);
            jCheckBox3.setVisible(false);
        }
        if (args.length >= 6) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox4, (String)args[5]);
        } else {
            jCheckBox4.setEnabled(false);
            jCheckBox4.setVisible(false);
        }
        if (args.length >= 7) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox5, (String)args[6]);
        } else {
            jCheckBox5.setEnabled(false);
            jCheckBox5.setVisible(false);
        }
        if (args.length >= 8) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox6, (String)args[7]);
        } else {
            jCheckBox6.setEnabled(false);
            jCheckBox6.setVisible(false);
        }
        if (args.length >= 9) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox7, (String)args[8]);
        } else {
            jCheckBox7.setEnabled(false);
            jCheckBox7.setVisible(false);
        }
        if (args.length >= 10) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox8, (String)args[9]);
        } else {
            jCheckBox8.setEnabled(false);
            jCheckBox8.setVisible(false);
        }
        if (args.length >= 11) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox9, (String)args[10]);
        } else {
            jCheckBox9.setEnabled(false);
            jCheckBox9.setVisible(false);
        }
        if (args.length >= 12) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox10, (String)args[11]);
        } else {
            jCheckBox10.setEnabled(false);
            jCheckBox10.setVisible(false);
        }
        if (args.length >= 13) {
            org.openide.awt.Mnemonics.setLocalizedText(jCheckBox11, (String)args[12]);
        } else {
            jCheckBox11.setEnabled(false);
            jCheckBox11.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(jEditorPane1);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jLabel1.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox1.text")); // NOI18N
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox2, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox2.text")); // NOI18N
        jCheckBox2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox2StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox3, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox3.text")); // NOI18N
        jCheckBox3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox3StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox4, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox4.text")); // NOI18N
        jCheckBox4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox4StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox5, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox5.text")); // NOI18N
        jCheckBox5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox5StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox6, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox6.text")); // NOI18N
        jCheckBox6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox6StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox7, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox7.text")); // NOI18N
        jCheckBox7.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox7StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox8, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox8.text")); // NOI18N
        jCheckBox8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox8StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox9, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox9.text")); // NOI18N
        jCheckBox9.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox9StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox10, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox10.text")); // NOI18N
        jCheckBox10.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox10StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox11, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jCheckBox11.text")); // NOI18N
        jCheckBox11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox11StateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jButton1.text")); // NOI18N
        jButton1.setToolTipText(org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jButton1.toolTipText")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jLabel2.text")); // NOI18N
        jLabel2.setToolTipText(org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jLabel2.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(SelectorDialog.class, "SelectorDialog.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(292, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox6)
                                .addGap(229, 229, 229))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jCheckBox3)
                                    .addComponent(jCheckBox4)
                                    .addComponent(jCheckBox5))
                                .addGap(125, 125, 125)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox11)
                                    .addComponent(jCheckBox10)
                                    .addComponent(jCheckBox9)
                                    .addComponent(jCheckBox8)
                                    .addComponent(jCheckBox7))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(41, 41, 41)
                        .addComponent(jButton1)
                        .addGap(22, 22, 22))))
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String sResultant = jEditorPane1.getText();
        this.dispose();
        m_feCommand.execute(sResultant);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void AnyCheckBoxStateChanged() {
        String strEditControlText = "";
        if (jCheckBox1.isSelected()) {
            strEditControlText += (String)m_ObjectArgs[2];
        }
        if (jCheckBox2.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[3];
        }
        if (jCheckBox3.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[4];
        }
        if (jCheckBox4.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[5];
        }
        if (jCheckBox5.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[6];
        }
        if (jCheckBox6.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[7];
        }
        if (jCheckBox7.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[8];
        }
        if (jCheckBox8.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[9];
        }
        if (jCheckBox9.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[10];
        }
        if (jCheckBox10.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[11];
        }
        if (jCheckBox11.isSelected()) {
            if (strEditControlText.length() > 0) strEditControlText += " ";
            strEditControlText += (String)m_ObjectArgs[12];
        }
        jEditorPane1.setText(strEditControlText);
    }
    
    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox2StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox2StateChanged

    private void jCheckBox3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox3StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox3StateChanged

    private void jCheckBox4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox4StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox4StateChanged

    private void jCheckBox5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox5StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox5StateChanged

    private void jCheckBox6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox6StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox6StateChanged

    private void jCheckBox7StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox7StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox7StateChanged

    private void jCheckBox8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox8StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox8StateChanged

    private void jCheckBox9StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox9StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox9StateChanged

    private void jCheckBox10StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox10StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox10StateChanged

    private void jCheckBox11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox11StateChanged
        // TODO add your handling code here:
        AnyCheckBoxStateChanged();
    }//GEN-LAST:event_jCheckBox11StateChanged

    /**
     * @param args the command line arguments
     */
    public static void showMainDialog(Object[] args, FunctionExecutor commandor) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SelectorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SelectorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SelectorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SelectorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
        
        m_ObjectArgs = args;
        m_feCommand = commandor;

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectorDialog dialog = new SelectorDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
